#!/bin/sh

# not work when catch a subprocess of lf(a file manager)
# 	since lf start ueberzug and then lf become background of ueberzug
# 	-B catch background needed

DEFAULT_PATH="$HOME"
default_name="window_shot_$(date +"%Y%m%d_%H%M%S%N").png"
target=$(rofi -dmenu -p "Input name/path: ")
# Parse variable, like $PWD
eval "target=$target"
# current_window=$(xdotool getwindowfocus -f)
current_window=$(xdotool getactivewindow)

# if start with /, which means that is a absolute path
if [[ $target == /* ]]; then
  # do nothing
  target=$target
  # (maim -B -i "$current_window" $target && notify-send "üñº window shot save as $target") || notify-send "‚ùåwindow shot failed."
elif [[ $target == -* ]]; then
  # save as default_name when start with -
  # target=$DEFAULT_PATH"/"$default_name
  target=$DEFAULT_PATH"/"$default_name
elif [[ -z "$target" ]]; then

  # save to clipboard
  (maim -B -i "$current_window" | xclip -selection clipboard -t image/png && notify-send "üñº window shot save to clipboard") || notify-send "‚ùåwindow shot failed."
  exit 0
else
  target=$DEFAULT_PATH"/"$target
  # (maim -B -i "$current_window" $target && notify-send "üñº window shot save as $target") || notify-send "‚ùåwindow shot failed."
fi

sleep 0.3

# maim -B -s | xclip -selection clipboard -t image/png
(maim -B -i "$current_window" $target && notify-send "üñº window shot save as $target") || notify-send "‚ùåwindow shot failed."

